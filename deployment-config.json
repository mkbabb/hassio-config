{
  "version": "1.0.0",
  "description": "Node-RED TypeScript Function Node Deployment Configuration",
  "timestamp": "2025-07-25T21:45:00.000Z",
  "buildConfiguration": {
    "sourceDirectory": "/Volumes/config/node-red-scripts/src",
    "distDirectory": "/Volumes/config/node-red-scripts/dist",
    "buildCommand": "npm run build",
    "compilationOptions": {
      "appendReturnMsg": true,
      "useStrict": true,
      "inlineImports": true
    }
  },
  "deploymentMappings": [
    {
      "sourceFile": "presence/presence.ts",
      "nodeId": "f633b8e8b3205bc1",
      "nodeName": "presence",
      "flowId": "173c5faccfb73051",
      "flowName": "Presence Subflow",
      "buildFlags": {
        "includeUtils": true,
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "presence/get-flow-info.ts",
      "nodeId": "f59de909516cb178",
      "nodeName": "get flow info",
      "flowId": "173c5faccfb73051",
      "flowName": "Presence Subflow",
      "buildFlags": {
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "batteries/battery.ts",
      "nodeId": "9b723d99a73d643f",
      "nodeName": "battery",
      "flowId": "e05fae85092ccf96",
      "flowName": "Battery Monitoring",
      "buildFlags": {
        "requiresHAServices": true
      }
    },
    {
      "sourceFile": "cache-states/states-to-actions.ts",
      "nodeId": "5cd5c7a97cbfb2a5",
      "nodeName": "states to actions",
      "flowId": "dc6c7d82059d5798",
      "flowName": "Cache States",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "cache-states/cache-house-state.ts",
      "nodeId": "fd875b9553cf1720",
      "nodeName": "cache house state",
      "flowId": "dc6c7d82059d5798",
      "flowName": "Cache States",
      "buildFlags": {
        "includeUtils": true,
        "requiresGlobalContext": true
      }
    },
    {
      "sourceFile": "cache-states/filter-blacklisted-entities.ts",
      "nodeId": "627b25edecfe582e",
      "nodeName": "filter blacklisted entities",
      "flowId": "b0e3e1c3c40d9540",
      "flowName": "Filter Entities Subflow",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "cache-states/filter-blacklisted-entities.ts",
      "nodeId": "08f84c6d37343c7a",
      "nodeName": "filter blacklisted entities",
      "flowId": "4f871e90.29a61",
      "flowName": "Main Flow",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "cache-states/filter-blacklisted-entities.ts",
      "nodeId": "3cbb13d1da946813",
      "nodeName": "filter blacklisted entities",
      "flowId": "e921812388e8a474",
      "flowName": "Plants Flow",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "cache-states/action-node.ts",
      "nodeId": "c04368f701cd604d",
      "nodeName": "action node",
      "flowId": "8021f5177f6126d9",
      "flowName": "Action Processing",
      "buildFlags": {
        "includeUtils": true,
        "requiresHAServices": true
      }
    },
    {
      "sourceFile": "cache-states/push-cache-states.ts",
      "nodeId": "3f3963cff3716131",
      "nodeName": "push cached states",
      "flowId": "4f871e90.29a61",
      "flowName": "Main Flow",
      "buildFlags": {
        "includeUtils": true,
        "requiresGlobalContext": true
      }
    },
    {
      "sourceFile": "cache-states/push-cache-states.ts",
      "nodeId": "715a229a5e312dca",
      "nodeName": "push cached states",
      "flowId": "4f871e90.29a61",
      "flowName": "Main Flow",
      "buildFlags": {
        "includeUtils": true,
        "requiresGlobalContext": true
      }
    },
    {
      "sourceFile": "cache-states/home-status.ts",
      "nodeId": "20d9cf93f238d30f",
      "nodeName": "home status",
      "flowId": "4f871e90.29a61",
      "flowName": "Main Flow",
      "buildFlags": {
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "cache-states/merge-cached-states.ts",
      "nodeId": "fcef4072b3d808c5",
      "nodeName": "merge cached states",
      "flowId": "a807a4834abd67fa",
      "flowName": "Merge States",
      "buildFlags": {
        "includeUtils": true,
        "requiresGlobalContext": true
      }
    },
    {
      "sourceFile": "cache-states/merge-scene-cached-states.ts",
      "nodeId": "57ba98e05115a206",
      "nodeName": "merge scene cached states",
      "flowId": "a807a4834abd67fa",
      "flowName": "Merge States",
      "buildFlags": {
        "includeUtils": true,
        "requiresGlobalContext": true
      }
    },
    {
      "sourceFile": "get-domain-entities/filter-hidden-and-domains.ts",
      "nodeId": "420bdf56a9545130",
      "nodeName": "filter hidden entities and domains",
      "flowId": "e920ad5e223ac1b7",
      "flowName": "Get Domain Entities",
      "buildFlags": {}
    },
    {
      "sourceFile": "get-domain-entities/reconcile.ts",
      "nodeId": "f3f79edb0a0bc587",
      "nodeName": "reconcile entities",
      "flowId": "e920ad5e223ac1b7",
      "flowName": "Get Domain Entities",
      "buildFlags": {
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "get-domain-entities/filter-entites.ts",
      "nodeId": "fe549fb394a9227a",
      "nodeName": "filter entities",
      "flowId": "e920ad5e223ac1b7",
      "flowName": "Get Domain Entities",
      "buildFlags": {}
    },
    {
      "sourceFile": "chronos/cron.ts",
      "nodeId": "872a4dcbed026511",
      "nodeName": "create schedule cron",
      "flowId": "a807a4834abd67fa",
      "flowName": "Chronos",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "chronos/cron.ts",
      "nodeId": "76883f7cb338fb52",
      "nodeName": "create schedule cron",
      "flowId": "a807a4834abd67fa",
      "flowName": "Chronos",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "chronos/inside-preamble-window.ts",
      "nodeId": "8707143d8533922c",
      "nodeName": "inside preamble window",
      "flowId": "a807a4834abd67fa",
      "flowName": "Chronos",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "chronos/guest-daytime.ts",
      "nodeId": "b2b315489cc8d2a7",
      "nodeName": "guest daytime",
      "flowId": "a807a4834abd67fa",
      "flowName": "Chronos",
      "buildFlags": {}
    },
    {
      "sourceFile": "plants/cache-schedule-entity.ts",
      "nodeId": "d22ac4c1c222afd5",
      "nodeName": "cache schedule entity",
      "flowId": "a807a4834abd67fa",
      "flowName": "Plants",
      "buildFlags": {
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "plants/pop-schedule-entity-cache.ts",
      "nodeId": "6bc7f26c9c624e6c",
      "nodeName": "pop schedule entity cache",
      "flowId": "a807a4834abd67fa",
      "flowName": "Plants",
      "buildFlags": {
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "plants/schedule.ts",
      "nodeId": "8baf517e98f7f1a1",
      "nodeName": "schedule",
      "flowId": "e921812388e8a474",
      "flowName": "Plants",
      "buildFlags": {
        "includeUtils": true,
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "plants/schedules.ts",
      "nodeId": "2f73425d194d82fa",
      "nodeName": "schedules",
      "flowId": "e921812388e8a474",
      "flowName": "Plants",
      "buildFlags": {}
    },
    {
      "sourceFile": "plants/set-static-state.ts",
      "nodeId": "04f8709ebd6588c0",
      "nodeName": "set static state",
      "flowId": "e921812388e8a474",
      "flowName": "Plants",
      "buildFlags": {
        "requiresFlowContext": true
      }
    },
    {
      "sourceFile": "remote-entities/get-entity-attributes-id.ts",
      "nodeId": "e2cb1e6a7e2044f7",
      "nodeName": "get entity attributes id",
      "flowId": "6337f535d7b8e1f2",
      "flowName": "Remote Entities",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "remote-entities/service-call/main.ts",
      "nodeId": "ba17a7bee754d74a",
      "nodeName": "create service call",
      "flowId": "6337f535d7b8e1f2",
      "flowName": "Remote Entities",
      "buildFlags": {
        "includeUtils": true
      }
    },
    {
      "sourceFile": "time-of-use.ts",
      "nodeId": "8f4c1ad0cad49211",
      "nodeName": "function",
      "flowId": "88965fe6e95d05d9",
      "flowName": "Time of Use",
      "buildFlags": {}
    }
  ],
  "unmappedNodes": [
    {
      "nodeId": "55653f952629f321",
      "nodeName": "function 1",
      "flowId": "f5468ca00e94e761",
      "flowName": "Presence",
      "notes": "Inline function using keyframes.ts library, not from TypeScript source"
    }
  ],
  "flowMappings": {
    "173c5faccfb73051": {
      "name": "Presence Subflow",
      "type": "subflow",
      "functionNodes": ["f633b8e8b3205bc1", "f59de909516cb178"]
    },
    "b0e3e1c3c40d9540": {
      "name": "Filter Entities Subflow",
      "type": "subflow",
      "functionNodes": ["627b25edecfe582e"]
    },
    "4f871e90.29a61": {
      "name": "Main Flow",
      "type": "tab",
      "functionNodes": ["3f3963cff3716131", "715a229a5e312dca", "08f84c6d37343c7a", "20d9cf93f238d30f"]
    },
    "e920ad5e223ac1b7": {
      "name": "Get Domain Entities",
      "type": "tab",
      "functionNodes": ["420bdf56a9545130", "f3f79edb0a0bc587", "fe549fb394a9227a"]
    },
    "dc6c7d82059d5798": {
      "name": "Cache States",
      "type": "tab",
      "functionNodes": ["5cd5c7a97cbfb2a5", "fd875b9553cf1720"]
    },
    "a807a4834abd67fa": {
      "name": "Chronos/Plants",
      "type": "tab",
      "functionNodes": ["872a4dcbed026511", "fcef4072b3d808c5", "57ba98e05115a206", "76883f7cb338fb52", "8707143d8533922c", "b2b315489cc8d2a7", "d22ac4c1c222afd5", "6bc7f26c9c624e6c"]
    },
    "e921812388e8a474": {
      "name": "Plants Schedule",
      "type": "tab",
      "functionNodes": ["04f8709ebd6588c0", "8baf517e98f7f1a1", "3cbb13d1da946813", "2f73425d194d82fa"]
    },
    "e05fae85092ccf96": {
      "name": "Battery Monitoring",
      "type": "tab",
      "functionNodes": ["9b723d99a73d643f"]
    },
    "6337f535d7b8e1f2": {
      "name": "Remote Entities",
      "type": "tab",
      "functionNodes": ["e2cb1e6a7e2044f7", "ba17a7bee754d74a"]
    },
    "8021f5177f6126d9": {
      "name": "Action Processing",
      "type": "tab",
      "functionNodes": ["c04368f701cd604d"]
    },
    "88965fe6e95d05d9": {
      "name": "Time of Use",
      "type": "tab",
      "functionNodes": ["8f4c1ad0cad49211"]
    },
    "f5468ca00e94e761": {
      "name": "Presence",
      "type": "tab",
      "functionNodes": ["55653f952629f321"]
    }
  },
  "deploymentRules": {
    "preDeploymentChecks": [
      "Verify source file exists",
      "Run TypeScript compilation",
      "Check for compilation errors",
      "Validate output contains 'return msg'"
    ],
    "postDeploymentChecks": [
      "Verify node update via API",
      "Check flow deployment status",
      "Validate function execution"
    ],
    "specialHandling": {
      "filter-blacklisted-entities.ts": {
        "note": "This file is deployed to multiple nodes across different flows",
        "nodeIds": ["627b25edecfe582e", "08f84c6d37343c7a", "3cbb13d1da946813"]
      },
      "push-cache-states.ts": {
        "note": "This file is deployed to multiple nodes in the same flow",
        "nodeIds": ["3f3963cff3716131", "715a229a5e312dca"]
      },
      "cron.ts": {
        "note": "This file is deployed to multiple nodes in the same flow",
        "nodeIds": ["872a4dcbed026511", "76883f7cb338fb52"]
      }
    }
  }
}